apiVersion: apps/v1
kind: Deployment
metadata:
  name: defi-protocol-service
  namespace: platformq
  labels:
    app: defi-protocol-service
    component: defi
    tier: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: defi-protocol-service
  template:
    metadata:
      labels:
        app: defi-protocol-service
        component: defi
        tier: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: defi-protocol-service
      containers:
      - name: defi-protocol-service
        image: platformq/defi-protocol-service:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: SERVICE_NAME
          value: "defi-protocol-service"
        - name: LOG_LEVEL
          value: "info"
        - name: ENVIRONMENT
          value: "production"
        
        # Ignite configuration
        - name: IGNITE_ADDRESSES
          value: "ignite-0.ignite.platformq.svc.cluster.local:10800,ignite-1.ignite.platformq.svc.cluster.local:10800"
        - name: IGNITE_CACHE_NAME
          value: "defi-protocol"
        
        # Pulsar configuration
        - name: PULSAR_SERVICE_URL
          value: "pulsar://pulsar-broker.platformq.svc.cluster.local:6650"
        - name: PULSAR_TOPIC_PREFIX
          value: "persistent://public/defi"
        
        # Blockchain Gateway
        - name: BLOCKCHAIN_GATEWAY_URL
          value: "http://blockchain-gateway-service.platformq.svc.cluster.local:8000"
        
        # Contract addresses (per chain)
        - name: ETHEREUM_LENDING_POOL
          valueFrom:
            configMapKeyRef:
              name: defi-contracts
              key: ethereum.lending-pool
        - name: ETHEREUM_AUCTION_PROTOCOL
          valueFrom:
            configMapKeyRef:
              name: defi-contracts
              key: ethereum.auction-protocol
        - name: POLYGON_LENDING_POOL
          valueFrom:
            configMapKeyRef:
              name: defi-contracts
              key: polygon.lending-pool
        - name: POLYGON_AUCTION_PROTOCOL
          valueFrom:
            configMapKeyRef:
              name: defi-contracts
              key: polygon.auction-protocol
              
        # Price oracle configuration
        - name: CHAINLINK_PRICE_FEEDS
          value: "true"
        - name: PRICE_UPDATE_INTERVAL
          value: "60"
        
        # Risk parameters
        - name: MAX_LEVERAGE_RATIO
          value: "3.0"
        - name: LIQUIDATION_THRESHOLD
          value: "0.85"
        - name: MIN_HEALTH_FACTOR
          value: "1.0"
          
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
            
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
          
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: protocol-configs
          mountPath: /app/protocols
          readOnly: true
          
      volumes:
      - name: config
        configMap:
          name: defi-protocol-config
      - name: protocol-configs
        configMap:
          name: defi-protocol-configs
          
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - defi-protocol-service
              topologyKey: kubernetes.io/hostname
              
---
apiVersion: v1
kind: Service
metadata:
  name: defi-protocol-service
  namespace: platformq
  labels:
    app: defi-protocol-service
    component: defi
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8000
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  selector:
    app: defi-protocol-service
    
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: defi-protocol-service
  namespace: platformq
  labels:
    app: defi-protocol-service
    
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: defi-protocol-config
  namespace: platformq
data:
  config.yaml: |
    service:
      name: defi-protocol-service
      version: 1.0.0
      
    server:
      host: 0.0.0.0
      port: 8000
      cors:
        enabled: true
        origins:
          - "*"
          
    metrics:
      enabled: true
      port: 9090
      
    lending:
      enabled: true
      supported_assets:
        - symbol: ETH
          decimals: 18
          ltv: 0.80
          liquidation_threshold: 0.85
          liquidation_bonus: 0.05
        - symbol: WBTC
          decimals: 8
          ltv: 0.75
          liquidation_threshold: 0.80
          liquidation_bonus: 0.05
        - symbol: USDC
          decimals: 6
          ltv: 0.85
          liquidation_threshold: 0.90
          liquidation_bonus: 0.03
        - symbol: DAI
          decimals: 18
          ltv: 0.85
          liquidation_threshold: 0.90
          liquidation_bonus: 0.03
      interest_rate_model:
        base_rate: 0.02
        optimal_utilization: 0.80
        slope1: 0.04
        slope2: 0.60
      update_interval: 300
      
    auctions:
      enabled: true
      types:
        - english
        - dutch
        - sealed_bid
      fees:
        platform_fee: 0.025
        min_duration: 3600
        max_duration: 2592000
      settlement_delay: 300
      
    staking:
      enabled: true
      reward_token: "QAGI"
      reward_rate: 0.10
      min_stake_period: 604800
      withdrawal_delay: 172800
      
    yield_farming:
      enabled: true
      pools:
        - name: "ETH-USDC"
          reward_multiplier: 2.0
        - name: "WBTC-USDC"
          reward_multiplier: 1.5
        - name: "DAI-USDC"
          reward_multiplier: 1.0
      harvest_interval: 86400
      
    liquidity_provision:
      enabled: true
      min_liquidity: 1000
      fee_tiers:
        - 0.0005
        - 0.003
        - 0.01
      price_impact_threshold: 0.05
      
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: defi-protocol-configs
  namespace: platformq
data:
  compound-config.json: |
    {
      "protocol": "compound",
      "version": "v3",
      "contracts": {
        "comptroller": "0x3d9819210A31b4961b30EF54bE2aeD79B9c9Cd3B",
        "price_oracle": "0x922018674c12a7F0D394ebEEf9B58F186CdE13c1"
      },
      "markets": {
        "cETH": "0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5",
        "cDAI": "0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643",
        "cUSDC": "0x39AA39c021dfbaE8faC545936693aC917d5E7563"
      }
    }
    
  aave-config.json: |
    {
      "protocol": "aave",
      "version": "v3",
      "contracts": {
        "pool": "0x87870Bca3F3fD6335C3F4ce8392D69350B4fA4E2",
        "pool_data_provider": "0x7B4EB56E7CD4b454BA8ff71E4518426369a138a3",
        "price_oracle": "0x54586bE62E3c3580375aE3723C145253060Ca0C2"
      }
    }
    
  uniswap-config.json: |
    {
      "protocol": "uniswap",
      "version": "v3",
      "contracts": {
        "factory": "0x1F98431c8aD98523631AE4a59f267346ea31F984",
        "router": "0xE592427A0AEce92De3Edee1F18E0157C05861564",
        "quoter": "0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6"
      },
      "fee_tiers": [500, 3000, 10000]
    }
    
  chainlink-feeds.json: |
    {
      "ethereum": {
        "ETH/USD": "0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419",
        "BTC/USD": "0xF4030086522a5bEEa4988F8cA5B36dbC97BeE88c",
        "USDC/USD": "0x8fFfFfd4AfB6115b954Bd326cbe7B4BA576818f6",
        "DAI/USD": "0xAed0c38402a5d19df6E4c03F4E2DceD6e29c1ee9"
      },
      "polygon": {
        "MATIC/USD": "0xAB594600376Ec9fD91F8e885dADF0CE036862dE0",
        "ETH/USD": "0xF9680D99D6C9589e2a93a78A04A279e509205945",
        "BTC/USD": "0xc907E116054Ad103354f2D350FD2514433D57F6f"
      }
    }
    
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: defi-contracts
  namespace: platformq
data:
  ethereum.lending-pool: "0x0000000000000000000000000000000000000000"
  ethereum.auction-protocol: "0x0000000000000000000000000000000000000000"
  polygon.lending-pool: "0x0000000000000000000000000000000000000000"
  polygon.auction-protocol: "0x0000000000000000000000000000000000000000"
  arbitrum.lending-pool: "0x0000000000000000000000000000000000000000"
  arbitrum.auction-protocol: "0x0000000000000000000000000000000000000000"
  
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: defi-protocol-service
  namespace: platformq
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: defi-protocol-service
  minReplicas: 3
  maxReplicas: 12
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
        
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: defi-protocol-service
  namespace: platformq
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: defi-protocol-service 