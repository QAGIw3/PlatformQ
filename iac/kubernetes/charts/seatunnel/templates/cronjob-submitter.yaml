{{- if .Values.jobSubmitter.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "seatunnel.fullname" . }}-job-submitter
  labels:
    {{- include "seatunnel.labels" . | nindent 4 }}
    component: job-submitter
spec:
  schedule: {{ .Values.jobSubmitter.schedule | quote }}
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      activeDeadlineSeconds: {{ .Values.jobSubmitter.activeDeadlineSeconds }}
      template:
        metadata:
          labels:
            {{- include "seatunnel.selectorLabels" . | nindent 12 }}
            component: job-submitter
        spec:
          restartPolicy: OnFailure
          serviceAccountName: {{ include "seatunnel.serviceAccountName" . }}
          containers:
          - name: job-submitter
            image: {{ .Values.jobSubmitter.image }}
            imagePullPolicy: IfNotPresent
            command:
            - /bin/bash
            - -c
            - |
              set -e
              echo "Starting SeaTunnel job submission..."
              
              SEATUNNEL_HOME="/opt/seatunnel"
              SEATUNNEL_BIN="${SEATUNNEL_HOME}/bin/seatunnel.sh"
              MASTER_URL="http://{{ include "seatunnel.fullname" . }}-master:{{ .Values.service.ports.api }}"
              
              # Wait for master to be ready
              for i in {1..30}; do
                if curl -f ${MASTER_URL}/overview > /dev/null 2>&1; then
                  echo "SeaTunnel master is ready!"
                  break
                fi
                echo "Waiting for master... (${i}/30)"
                sleep 10
              done
              
              # Submit jobs
              for config_file in /opt/seatunnel/jobs/*.conf; do
                if [ -f "${config_file}" ]; then
                  job_name=$(basename ${config_file} .conf)
                  echo "Submitting job: ${job_name}"
                  
                  # Check if job is already running
                  if curl -s ${MASTER_URL}/jobs/overview | grep -q "\"name\":\"${job_name}\""; then
                    echo "Job ${job_name} is already running, skipping..."
                    continue
                  fi
                  
                  # Submit the job
                  ${SEATUNNEL_BIN} --config ${config_file} \
                    --master ${MASTER_URL} \
                    --deploy-mode cluster \
                    --name ${job_name}
                  
                  if [ $? -eq 0 ]; then
                    echo "Job ${job_name} submitted successfully!"
                  else
                    echo "Failed to submit job ${job_name}"
                  fi
                fi
              done
              
              echo "Job submission complete!"
            env:
            {{- range .Values.env }}
            - name: {{ .name }}
              {{- if .value }}
              value: {{ .value | quote }}
              {{- else if .valueFrom }}
              valueFrom:
                {{- toYaml .valueFrom | nindent 16 }}
              {{- end }}
            {{- end }}
            volumeMounts:
            - name: jobs
              mountPath: /opt/seatunnel/jobs
              readOnly: true
          volumes:
          - name: jobs
            configMap:
              name: {{ include "seatunnel.fullname" . }}-jobs
{{- end }} 