replicaCount: 2

image:
  repository: platformq/mlflow-server
  pullPolicy: IfNotPresent
  tag: "2.9.2"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: "mlflow"

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "5000"
  prometheus.io/path: "/metrics"

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 5000
  targetPort: 5000

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "500m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: mlflow.platformq.io
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: mlflow-tls
      hosts:
        - mlflow.platformq.io

resources:
  limits:
    cpu: 2000m
    memory: 4Gi
  requests:
    cpu: 500m
    memory: 1Gi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 6
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - mlflow
        topologyKey: kubernetes.io/hostname

# MLflow specific configuration
mlflow:
  # Backend store URI (PostgreSQL)
  backendStoreUri: "postgresql://mlflow:$(POSTGRES_PASSWORD)@mlflow-postgresql:5432/mlflow"
  
  # Artifact store URI (MinIO)
  defaultArtifactRoot: "s3://mlflow-artifacts/"
  
  # Server configuration
  serveArtifacts: true
  artifactsDestination: "s3://mlflow-artifacts/"
  
  # Authentication
  authConfigPath: "/config/auth.ini"
  
  # Workers
  workers: 4
  
  # Database migration
  dbUpgrade: true

# PostgreSQL subchart configuration
postgresql:
  enabled: true
  auth:
    username: mlflow
    database: mlflow
    existingSecret: mlflow-postgresql-secret
  primary:
    persistence:
      enabled: true
      size: 20Gi
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

# MinIO configuration
minio:
  endpoint: "http://minio:9000"
  bucket: "mlflow-artifacts"
  accessKey:
    secretName: minio-credentials
    key: access-key
  secretKey:
    secretName: minio-credentials
    key: secret-key

# Environment variables
env:
  - name: MLFLOW_S3_ENDPOINT_URL
    value: "http://minio:9000"
  - name: AWS_ACCESS_KEY_ID
    valueFrom:
      secretKeyRef:
        name: minio-credentials
        key: access-key
  - name: AWS_SECRET_ACCESS_KEY
    valueFrom:
      secretKeyRef:
        name: minio-credentials
        key: secret-key
  - name: POSTGRES_PASSWORD
    valueFrom:
      secretKeyRef:
        name: mlflow-postgresql-secret
        key: password

# Multi-tenancy configuration
multiTenancy:
  enabled: true
  isolationMode: "namespace"  # namespace or rbac
  defaultQuotas:
    maxExperiments: 1000
    maxModels: 100
    maxVersionsPerModel: 50

# Prometheus metrics
metrics:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 30s 